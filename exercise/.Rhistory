fibseq <- c(fibseq, fib)
tmp = fib - tmp
if (fib %% 2 == 0){
sum = sum + fib
}
}
fibseq
# version 2
fib = 1; tmp = 1; sum = 0
fibseq <- c(1)
while(fib <= 4e6){
fib = fib + tmp
fibseq <- c(fibseq, fib)
tmp = fib - tmp
if (fib %% 2 == 0){
sum = sum + fib
}
}
fibseq
# version 2
fib = 1; tmp = 1; sum = 0
fibseq <- c(0)
while(fib <= 4e6){
fib = fib + tmp
fibseq <- c(fibseq, fib)
tmp = fib - tmp
if (fib %% 2 == 0){
sum = sum + fib
}
}
fibseq
fib = 1; tmp = 1; sum = 0
fibseq <- c(1,1)
while(fib <= 4e6){
fib = fib + tmp
fibseq <- c(fibseq, fib)
tmp = fib - tmp
if (fib %% 2 == 0){
sum = sum + fib
}
}
fibseq
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
fib2 = fib2 + fib1
fibseq <- c(fibseq, fib2<- fib2+fib1 )
fib1 = fib2 - fib1
if (fib2 %% 2 == 0){
sum = sum + fib2
}
}
fibseq
# version 2
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
#  fib2 = fib2 + fib1
fibseq <- c(fibseq, fib2<- fib2+fib1 )
fib1 = fib2 - fib1
if (fib2 %% 2 == 0){
sum = sum + fib2
}
}
fibseq
# version 2
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
#  fib2 = fib2 + fib1
fibseq = c(fibseq, fib2 = fib2+fib1 )
fib1 = fib2 - fib1
if (fib2 %% 2 == 0){
sum = sum + fib2
}
}
rm(list=ls())
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
#  fib2 = fib2 + fib1
fibseq <- c(fibseq, fib2 <- fib2+fib1 )
fib1 = fib2 - fib1
if (fib2 %% 2 == 0){
sum <- sum + fib2
}
}
fibseq
sum
i = 2; x = c(1,1)
while ( x[i]< 4e6 ) {
x[i+1] = x[i] + x[i-1] # fibonaci
i = i+1
}
x = x[-i] # remove the last one
max(x)
# sum of even-valued terms
sum(x[x%%2==0])
max(fibseq)
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
fibseq <- c(fibseq, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
# sum of even-valued terms
if (fib2 %% 2 == 0){
sum <- sum + fib2
}
}
fibseq
max(fibseq)
sum
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
fibseq = c(fibseq, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
# sum of even-valued terms
if (fib2 %% 2 == 0){
sum <- sum + fib2
}
}
fibseq
max(fibseq)
sum
fibseq[-length(fibseq)]
fibseq
fibseq <- fibseq[-length(fibseq)] # remove the last one
fibseq[-length(fibseq)]
# version 2
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
fibseq <- c(fibseq, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
# sum of even-valued terms
if (fib2 %% 2 == 0){
sum <- sum + fib2
}
}
fibseq
a=c(1,2,3)
a
a
a[-3]
a
a<-a[-3]
a
fibseq <- c(1,1)
fib1 = 1; fib2 = 1
sum = 0
while(fib2 <= 4e6){
fibseq <- c(fibseq, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
}
fibseq <- fibseq[-length(fibseq)] # remove the last one
max(fibseq)
fibseq
sum(fibseq%%2==0)
sum(sapply(fibseq, function(x) x%%2==0)
)
sapply(fibseq, function(x) x%%2==0)
sum(fibseq[fibseq%%2==0])
i = 2; x = c(1,1)
while ( x[i]< 4e6 ) {
x[i+1] = x[i] + x[i-1] # fibonaci
i = i+1
}
x = x[-i] # remove the last one
max(x)
# sum of even-valued terms
sum(x[x%%2==0])
fib <- c(1,1)
fib1 = 1; fib2 = 1
while(fib2 <= 4e6){
fib <- c(fib, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
}
fib <- fib[-length(fib)] # remove the last one
max(fib)
# sum of even-valued terms
sum(fib[fib%%2==0])
fib <- c(1,1)
fib1 = 1; fib2 = 1
while(fib2 <= 4e6){
fib <- c(fib, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
}
fib <- fib[-length(fib)] # remove the last one
max(fib)
# sum of even-valued terms
sum(fib[fib%%2==0])
fib <- c(1,1)
fib1 = 1; fib2 = 1
while(fib2 <= 4e6){
fib <- c(fib, fib2 <- fib2+fib1)
fib1 = fib2 - fib1
}
fib <- fib[-length(fib)] # remove the last one
fib
max(fib)
# sum of even-valued terms
sum(fib[fib%%2==0])
cat('\nmatrix(',nrow(mat),',',ncol(mat),')\n'); print(mat)
source('~/.active-rstudio-document')
x = c(2,1,3)
A = matrix(1:9, 3, 3, byrow = TRUE)
y = c()
for (i in 1:nrow(A)) {
sum = 0
for (j in 1:ncol(A)) {
sum = sum + A[i, j] * x[j]
}
y[i] = sum
}
y
source('~/.active-rstudio-document')
mad( c(2, 6, 6, 12, 17, 25, 32) )
mad = function(v){
return(median(abs(v - median(v))))
}
mad( c(2, 6, 6, 12, 17, 25, 32) )
source('~/.active-rstudio-document')
a = letters[0:5]
paste0( a, sort( rep(a,length(a)) ) )
gameOfCraps = function(p = 0){
x = sum(sample(1:6, 2, replace = T))
if (p == 0) {
if (x == 7 | x == 11){return("Win")}
else if (x %in% c(2, 3, 12)){return("Loss")}
else {
gameOfCraps(x)
}
}
else {
if (x == 7){return("Loss")}
else if (x == p){return("Win")}
else {gameOfCraps(p)}
}
}
gameOfCraps()
gameOfCraps()
sapply(c(1:1000), gameOfCraps())
sapply(c(1:1000), function () gameOfCraps())
sapply(c(1:1000), function() gameOfCraps())
gameOfCraps()
gameOfCraps()
gameOfCraps()
gameOfCraps()
c(1:1000)
res = c()
for(i in 1:1000){
res<-c(res, gameOfCraps())
}
res
res = c()
for(i in 1:1000){
res<-c(res, gameOfCraps())
}
head(res)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
res <- readr::read_csv("n:/dataset/DOHMH_New_York_City_Restaurant_Inspection_Results.csv")
head(res)
names(res) <- tolower(names(res))
res
head(res)
resLower<- tolower(names(res))
head(resLower)
names(res) <- tolower(names(res))
head(res)
head(res,2)
rename(res, 'cuisine description' = 'cuisine', `inspection date` = `inspection.date`)
names(res)
rename(res, 'cuisine description' = 'cuisine')
rename(res, 'cuisine description' = cuisine)
rename(res, 'cuisine_description' = cuisine)
rename(res, 'cuisine_description' = 'cuisine)
rename(res, 'cuisine_description' = 'cuisine')
rename(res,  'cuisine description' = 'cuisine', `inspection date` = `inspection.date`)
names
names(res)
rename(res,  'cuisine description' = 'cuisine', `inspection date` = inspection.date)
rename(res,  'cuisine description' = 'cuisine')
rename(res,  "cuisine description" = "cuisine")
rename(res,  "cuisine description" )
mutate(res$`inspection date`, as.Date(castedDate))
res %>% mutate(`inspection date`, as.Date(castedDate))
res %>% mutate(as.Date(`inspection date`))
res$'insepction date' <- as.Date(res$'inspection date')
res$'insepction date' <- as.Date(res$'inspection date')
res$'insepction date' <- as.Date(as.character(res$'inspection date'))
head(res,2)
res$'insepction date' <- as.Date(as.character(res$'inspection date'), format = "%d/%m/%y"))
res$'insepction date' <- as.Date(as.character(res$'inspection date'), format = "%d/%m/%y")
head(res)
rename(res, 'inspection date' = 'inspection.date')
rename(res, 'inspection date' = inspection.date)
rename(res, 'inspection date' = "inspection.date")
rename(res, "inspection date" = "inspection.date")
rename(res, "cuisine description" = "cuisine")
rename(res, "cuisine" = "cuisine description")
rename(res, "inspection.date" = "inspection date")
res %>% select(inspection.date)
names(res)
rename(res, "cuisine" = "cuisine description", "inspection.date"="inspection date")
names(res)
rename(res, "cuisine" = "cuisine description", "inspection.date"="inspection date")
res1 <-rename(res, "cuisine" = "cuisine description", "inspection.date"="inspection date")
res1
names(res1)
res1$insepction.date <- as.Date(as.character(res$inspection.date), format = "%d/%m/%y")
rm(list=ls())
res <- readr::read_csv("n:/dataset/DOHMH_New_York_City_Restaurant_Inspection_Results.csv")
names(res) <- tolower(names(res))
res1<-rename(res, "cuisine" = "cuisine description", "inspection.date" = "inspection date")
res1$insepction.date <- as.Date(as.character(res$inspection.date), format = "%d/%m/%y")
res1
res1$insepction.date <- as.Date(as.character(res1$inspection.date), format = "%d/%m/%y")
res1 %>% select(inspection.date) %>% mutate(month=dmv(inspection.date))
res1 %>% select(inspection.date) %>% mutate(month=dmy(inspection.date))
res1 %>% select(inspection.date) %>% mutate(month=month(inspection.date))
res1 %>% select(inspection.date) %>% mutate(month=months(inspection.date))
head(res1,1)
months(03/17/2018)
months('03/17/2018')
months(as.Date('03/17/2018'))
class(res1$inspection.date)
res1$insepction.date <- as.Date(as.character(res1$inspection.date), format = "%m/%d/%Y")
months(as.Date('03/17/2018'))
class(res1$inspection.date)
months(as.Date('03/17/2018'))
as.factor(months(as.Date('03/17/2018')))
as.numeric(as.factor(months(as.Date('03/17/2018'))))
abc<-'03/17/2018'
as.numeric(as.factor(months(abc)))
as.numeric(as.factor(months(as.Date(abc))))
as.numeric(as.factor(months(as.Date(abc))))
as.Date("01/01/2000")
res1$inspection.date
res1$insepction.date <- as.Date(res1$inspection.date, format = "%m/%d/%Y")
head(res1$inspection.date)
res1$insepction.date <- as.Date(res1$inspection.date)
res1$insepction.date <- as.Date(res1$inspection.date, format = "%m/%d/%Y")
head(res1$inspecetion.date)
head(res1$inspecetion.date)
res1$insepction.date <- as.Date(res1$inspection.date, format = "%m/%d/%Y")
res1$insepction.date <- as.Date(res$'inspection date', format = "%m/%d/%Y")
head(res1$inspection.date,2)
as.Date('03/17/2018')
as.Date("03/17/2018")
as.Date("01/01/2000")
head(as.Date(res1$inspection.date))
head(res1,3)
namees(res)
names(res)
names(res1)
names(res1)
head(res1$grade)
head(res1)
select(res$grade)
res1 %>% select(grade)
res1 %>% select(grade, na.rm=T)
res1 %>% tail(select(grade))
res1 %>% select(score)
res1 %>% mutate(score,function(x){}
)
res1 %>% mutate(score,function(x){if(0 <= x & x< 14) {'A'} else if )14 <= x & x < 28) {'B'} else if (x >=28){'C'} else {'Don't Care'}})
res1 %>% mutate(score,function(x){if(0 <= x & x< 14) {'A'} else if (4 <= x & x < 28) {'B'} else if (x >=28){'C'} else {'Don't Care'}})
res1 %>% mutate(score,function(x){if(0 <= x & x< 14) {'A'} else if (4 <= x & x < 28) {'B'} else if (x >=28){'C'} else {'whtever'}})
res1 %>% mutate(score,ifelse(0 <= x & x< 14,'A', ifelse (4 <= x & x < 28,'B', ifelse (x >=28,'C','whtever'))))
res1 %>% mutate(score,ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C','whtever'))))
res1 %>% select(score)
res1 %>% mutate(score1,ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C','whtever'))))
res1 %>% mutate(score1=ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C','whtever'))))
res1 %>% select(score1)
res1 %>% select(score)
res1$score1
res1 %>% mutate(score1=ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C','whtever'))))
res1$score1
names(res1)
head(res1$action)
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action="violations")
head(res1$action)
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action="violations")
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action="violations")
res1$action
res1 %>% filter(action="Violations were cited in the following area(s).") %>% mutate(action=action.replace("violations"))
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=action.replace("violations"))
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=replace("violations"))
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=replace(action=="violations"))
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=replace(action, action=="violations"))
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=replace(action, action=="violations", NA))
res1$action
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=replace(action=="violations", NA))
res1 %>% filter(action=="Violations were cited in the following area(s).") %>% mutate(action=replace(action, action="violations", NA))
res1 %>% mutate(action=replace(action, action=="Violations were cited in the following area(s).",action="violations"))
res1 %>% mutate(action=replace(action, action=="Violations were cited in the following area(s).","violations"))
res1$action
?replace
res1 %>% mutate(action=replace(action, action=="Violations were cited in the following area(s).","violations"))
res1 %>% mutate(action=replace(action, action=="Violations were cited in the following area(s).","violations"))
res1$action
res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action))
res1$action
res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action))
res1$action
res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action)) %>% head(res1$action)
res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action)) %>% head(res1$action,3)
res1 %>% select(`camis`, `boro`, `cuisine`, `inspection.date`, `action`, `score`, `grade`, `month`)
res1 %>% mutate(score, ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C','whtever'))))
res1 <- res1 %>% mutate(score, ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C','whtever'))))
res1$score
res1 <- res1 %>% mutate(score, ifelse(0 <= score & score < 14,score='A', ifelse (4 <= score & score < 28,score='B', ifelse (score >=28,score='C',''))))
res1 <- res1 %>% mutate(score= ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C',''))))
res1$score
res1<-res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action))
res1$action
res1<-res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action)) %>% mutate(action = ifelse(action == "No violations were recorded at the time of this inspection.", "reclosed",action))%>% mutate(action = ifelse(action == "No violations were recorded at the time of this inspection.", "no violations",action))%>% mutate(action = ifelse(action == "Establishment re-opened by DOHMH", "reopened",action))
head(res1$action)
res1$action
head(res1$boro)
filter(res1,boro, na.rm=T)
res1 %>% filter(boro, na.rm=T)
cls
res1 %>% filter(boro,na.rm=T)
is.na(res1$boro)
res1 %>% filter(boro,is.na==FALSE)
?complete
na.omit(res1$boro)
res1 <- res1 %>% na.omit(res1$boro)
res1$boro
?filter
abc <- res1 %>% na.omit(res1$boro) %>% na.omit(res1$score) %>% filer(score>0)
abc <- res1 %>% na.omit(res1$boro) %>% na.omit(res1$score) %>% filter(score>0)
abc$score
res1 <- res1 %>% na.omit(res1$boro) %>% na.omit(res1$score) %>% fitler(score>0)
res1 <- res1 %>% na.omit(res1$boro) %>% na.omit(res1$score) %>% filter(score>0)
res1$action
res1$score
abc<-res1$insepction.date <- as.Date(res1$inspection.date, format = "%m/%d/%Y")
abc$inspection.date
abc$'inspection.date'
names(abc)
res1$inspection.date
res1$insepction.date <- as.Date(as.character(res1$inspection.date, format = "%m/%d/%Y"))
as.Date("07/13/2018")
as.Date(as.character("07/13/2018"))
as.Date(as.character("07/13/2018"), format='%m/%d/%Y')
res1$insepction.date <- as.Date(as.Character(res1$inspection.date, format="%m/%d/%Y"))
res1$insepction.date <- as.Date(as.character(res1$inspection.date, format="%m/%d/%Y"))
as.Date(as.character("07/13/2018"), format='%m/%d/%Y')
res1$inspection.date
as.Date(as.character(res1$inspection.date), format='%m/%d/%Y')
res1 <- res1 %>% as.Date(as.Character(res1$inspection.date, format="%m/%d/%Y"))
res1 <- res1 %>% as.Date(as.Character(res1$'inspection.date', format="%m/%d/%Y"))
as.Date(as.Character(res1$inspection.date, format="%m/%d/%Y"))
res1 <- res1 %>% as.Date(as.Character(res1$inspection.date), format="%m/%d/%Y"))
res1 <- res1 %>% as.Date(as.character(res1$inspection.date), format="%m/%d/%Y"))
res1 <- res1 %>% as.Date(as.character((res1$inspection.date), format="%m/%d/%Y"))
res1 <- res1 %>% as.Date(as.character(res1$inspection.date, format="%m/%d/%Y"))
as.Date(as.character(res1$inspection.date, format="%m/%d/%Y"))
as.Date(as.Character(res1$inspection.date, format="%m/%d/%Y"))
as.Date(as.character("07/13/2018"), format='%m/%d/%Y')
as.Date(as.character(res1$inspection.date), format='%m/%d/%Y')
res1 <- res1 %>% as.Date(as.character(res1$inspection.date), format='%m/%d/%Y')
res1$inspection.date <- as.Date(as.character(res1$inspection.date), format='%m/%d/%Y')
res1$inspection.date
res1$inspection.date
as.integer("2017-10-26")
as.integer(as.Date("2017-10-26"))
as.integer(as.character("2017-10-26"))
as.character("2017-10-26")
mutate("2017-10-26" = str_replace("-",""))
mmonth(as.POSIXlt("2017-10-26", format="%Y/%m/%d"))
month(as.POSIXlt("2017-10-26", format="%Y/%m/%d"))
month(as.POSIXlt("2017-10-26"))
as.POSIXlt("2017-10-26")
format(as.POSIXlt("2017-10-26"),"%m")
res1 %>% mutate(month=format(as.POSIXlt($res1.'inspection.date'),"%m"))
res1 %>% mutate(month=format(as.POSIXlt(res1$inspection.date),"%m"))
res1 %>% mutate(month=format(as.POSIXlt(res1$inspection.date),"%m")) %>% res1$month
res1 %>% mutate(month=format(as.POSIXlt(res1$inspection.date),"%m")) %>% head(res1$month)
abc <-res1 %>% mutate(month=format(as.POSIXlt(res1$inspection.date),"%m"))
abc$month
res1 <- res1 %>% mutate(month=format(as.POSIXlt(res1$inspection.date),"%m"))
rm(list=ls())
library(tidyverse)
res <- readr::read_csv("n:/dataset/DOHMH_New_York_City_Restaurant_Inspection_Results.csv")
names(res) <- tolower(names(res))
res1<-rename(res, "cuisine" = "cuisine description", "inspection.date" = "inspection date")
res1$inspection.date <- as.Date(as.character(res1$inspection.date), format='%m/%d/%Y')
res1 <- res1 %>% mutate(month=format(as.POSIXlt(res1$inspection.date),"%m"))
res1 <- res1 %>% mutate(score= ifelse(0 <= score & score < 14,'A', ifelse (4 <= score & score < 28,'B', ifelse (score >=28,'C',''))))
res1<-res1 %>% mutate(action = ifelse(action == "Violations were cited in the following area(s).", "violations", action)) %>% mutate(action = ifelse(action == "No violations were recorded at the time of this inspection.", "reclosed",action))%>% mutate(action = ifelse(action == "No violations were recorded at the time of this inspection.", "no violations",action))%>% mutate(action = ifelse(action == "Establishment re-opened by DOHMH", "reopened",action))
res1 <- res1 %>% na.omit(res1$boro) %>% na.omit(res1$score) %>% filter(score>0)
res2 <- select(`raw.df`: `camis`, `boro`, `cuisine`, `inspection.date`, `action`, `score`, `grade`, `month`)
res2 <- select(`res1`: `camis`, `boro`, `cuisine`, `inspection.date`, `action`, `score`, `grade`, `month`)
names(res1)
?select
res2 <- select(`res1`: camis, boro, cuisine, inspection.date, action, score, grade, month)
res1 %>% select(camis, boro, cuisine, inspection.date, action, score, grade, month)
res2 <- res1 %>% select(camis, boro, cuisine, inspection.date, action, score, grade, month)
res2
